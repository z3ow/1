do return(function(Un,Rn,an,dn,Mn,Dn,Ln,wn,Cn,Tn,Fn,Nn,Hn,qn,Gn,Xn,jn,An,Zn,hn,zn,Kn,on,bn,Bn,Yn,Wn,Pn,tn,cn,mn,E,...)local en=3;local Jn,rn,In,fn=nil,nil,nil,nil;while true do if Cn(0,en,1)then if not(Cn(1,en,0X000))then do fn=200256568;end;do break;end;else do In=0X5A4f70b3;end;en=1;continue;end;else do if not(Cn(0x1,en,2))then Jn=0X140abF38;do en=0X02;end;else rn=0X4274C816;en=0X00;end;end;end;end;local x=select;local U,l,g,r=tn,nil,nil,(nil);do for x8=0,0X2 do do if not(Cn(0X0,x8,0X00000))then if Cn(0X1,x8,1)then g=Nn;else r=bit32.bor;continue;end;else do l=Rn;end;end;end;end;end;local Z=((setmetatable({},{__div=function(dl,Ul)fn=fn+915;return(Ul-fn);end})/0XbEFafCC));en=0x1;local H,s,f=nil,nil,nil;while Cn(0X2,en,0X3)do if not(en<=0X0)then if en~=1 then s=Tn.sub;en=0;continue;else H=Bn;do en=2;end;do continue;end;end;else f=cn.bxor;en=0X0003;end;end;local L=(setmetatable({},{__mul=function(NS,BS)In=In-0X27d;local kS=1;repeat if kS==0X0 then do return((BS+In)+fn);end;else fn=fn-0X000388;kS=0;end;until(false);end})*2579555719);local M,t,Q,h=nil,nil,nil,(nil);for Dj=0X0,3 do if Cn(0,Dj,0X1)then if Cn(1,Dj,0)then do M=Cn(0x4,Cn(3,nil,nil,42,r,{},U,0Xf,175.52102259026987,L),0X00001);end;continue;else t=string.byte;end;elseif Cn(0x5,nil,nil,0X39,{},Dj,168.54365600226646,{},0X0030,17,f,x8)==0x2 then Q=bn;continue;else do h={[0x0]=1};end;continue;end;end;local S={[0x6]=2,[0X7]=-1339199559,[0x07]=0.6707226781871023,[1]="\w",[0X3]=4,[7]=false,[1]=5,[7]=9,[5]=0X0,[7]=false,[(Cn(0X4,setmetatable({},{__sub=function(YL,vL)fn=fn-556;return(vL+fn);end}),-200256016))]=3,[(Cn(0x06,setmetatable({},{__mod=function(Qa,Da)return Da;end}),0X7))]=9,[0x9]=8,[0X0005]=0X8};do en=0x2;end;local N,T,b,K,P,a=nil,nil,nil,nil,nil,nil;while true do if not(en<=0X2)then if not(Cn(0,en,3))then if en~=0X0004 then a=Wn.wrap;do break;end;else T=Tn.match;en=0;end;else K=Kn;en=0X1;end;else do if not(en<=0x00000)then if en==0X00001 then P="LPH}en=0X005;else do N=Cn(7,nil,nil,en,0X32,304.716762896148,{},M,en,{},zn,Tn).rep;end;en=0x4;do continue;end;end;else b=zn;en=0x3;end;end;end;end;local o=Tn.unpack;local R=(an);local W=(jn);local q=H();local z=(rawget);do en=0X01;end;local c,B=nil,(nil);do while-0X040F2da72 do do if Cn(1,en,0)then do B=Tn.gsub;end;break;else c=Un;en=0;end;end;end;end;en=1;local w,Y=nil,(nil);while Cn(0X8,en,0X3)do if not(Cn(0X00,en,0))then if Cn(0x1,en,1)then do en=2;end;continue;else P=Cn(9,nil,nil,{},Z,en,c,599.7049947957257,{},Jn,B,{})(s(P,5),'\.\.',function(Kf)if t(Kf,0x2)==0X48 then do for DC=0X0,0X1 do if DC==0X0 then w=Q(s(Kf,0x1,on));else return'';end;end;end;else local Yk=(nil);local Jk=0X01;while Jk<=1 do do if Jk==0 then if not(w)then do return Yk;end;else local i0=N(Yk,w);local V0=(1);repeat do if V0==0 then return i0;else do w=Xn;end;do V0=0;end;end;end;until(false);end;Jk=2;else Yk=R(Q(Kf,0X000010));Jk=0x00;continue;end;end;end;end;end);en=0;continue;end;else Y=function()local eM=(t(P,Z,Z));local lM=(0X0);repeat if lM~=0X0 then return eM;else do Z=Z+1;end;lM=0X00001;do continue;end;end;until(false);end;do en=3;end;end;end;local v=(error);en=1;local i,d,F=nil,nil,(nil);do repeat if Cn(0,en,0x0)then d=Hn^52;do en=2;end;else if Cn(0X0001,en,1)then i=0X0080000000;en=0X0;else do F=Cn(4,i,1);end;en=3;do continue;end;end;end;until Cn(10,en,2);end;local G,A,e=nil,nil,nil;do for cf=0x0000,0x3 do if not(Cn(0,cf,1))then do if cf~=2 then e=Zn;else do A=function()local C2,O2=o(qn,P,Z);Z=O2;do return C2;end;end;end;end;end;else do if cf~=0 then do G=function()local IB,jB,eB=1,nil,(nil);do repeat if IB==0 then Z=eB;IB=0X2;do continue;end;else do jB,eB=o("<I4",P,Z);end;do IB=0;end;end;until IB>0X1;end;return jB;end;end;continue;else do local wY=nil;for SW=0,0X01 do if Cn(0X00001,SW,0)then wY=2;else for vQ=0X00001,31 do local kQ=(0X0);while-368733987 do if kQ~=0x00000 then wY=wY*0x002;do break;end;else h[vQ]=Cn(11,nil,nil,wY,en,en,158.61144812754694,In,h,en,d);kQ=1;continue;end;end;end;continue;end;end;end;end;end;end;end;end;local u={0x3,(Cn(4,setmetatable({},{__sub=function(Im,Rm)rn=rn+399;do fn=fn+0X2bb;end;for XH=0,1 do do if XH==0X0 then In=In+0X3cb;else return(((Rm-rn)-fn)-In);end;end;end;end}),2830362750)),0X01};local O=(Pn);local k=(type);do en=6;end;local D,I,J,C,j,V,m,X=nil,nil,nil,nil,nil,nil,nil,nil;repeat if not(en<=3)then if Cn(0,en,0x05)then if not(Cn(0X001,en,4))then V=function()local p3,h3=0X0,(0);do while true do local tQ=t(P,Z,Z);Z=Z+0x001;h3=r(h3,e(I(tQ,0X07F),p3));do if I(tQ,0x80)~=0X0 then else do return h3;end;end;end;p3=p3+7;end;end;end;do en=0X1;end;else do J=Yn;end;en=0X7;continue;end;elseif en~=0x006 then C=Gn;en=3;continue;else D=function()local xu,hu,Ku=2,nil,nil;do while(true)do if not(xu<=0)then if xu==0X1 then return hu;else hu,Ku=o("\060d",P,Z);xu=0x00;end;else Z=Ku;xu=1;continue;end;end;end;end;en=0;continue;end;else if Cn(0,en,0x1)then if not(Cn(0x001,en,0X0))then m=function(yv,bv,Bv)local Nv=0X3;local Av,rv,vv=nil,nil,nil;do repeat if Nv<=1 then if Nv==0 then vv=(yv/h[bv])%h[Bv];Nv=0X1;continue;else vv=vv-vv%(setmetatable({},{__sub=function(sl,Nl)local il=0X1;do repeat if il==0X0 then do Av=Av+945;end;do il=2;end;continue;else rv=rv+696;il=0;end;until il>=0X00002;end;return((Nl-rv)-Av);end})-2957844497);Nv=4;end;else if Nv==2 then rv=939379181;do Nv=0X0000;end;else Av=0X784f4FBA;Nv=2;end;end;until Nv==4;end;do return vv;end;end;en=0x02;else do I=wn;end;en=0x004;end;else if not(Cn(0X01,en,0x2))then j=coroutine.yield;do en=0X5;end;continue;else X=Ln;break;end;end;end;until false;local p=(Cn(0X0000C,nil,nil,cn,Y,14.748448206469593,X,{},I,0X28,{},50.7283698982772,32)());local En=Y();do en=0X00002;end;local On,y,Qn,ln=nil,nil,nil,(nil);repeat if not(Cn(0,en,1))then if en==2 then do On=function(ej)local jj,xj,gj,pj,Fj=nil,nil,nil,nil,(nil);for Ds=0,4 do if Ds<=0X1 then if Ds~=0X00 then xj=f(jj[0X1],En);else do jj={t(P,Z,Z+3)};end;continue;end;elseif not(Ds<=0X2)then if Ds~=3 then Fj=f(jj[0X4],En);continue;else do pj=f(jj[0x3],En);end;continue;end;else gj=f(jj[2],En);do continue;end;end;end;local mj=(0X2);do while true do if not(mj<=0)then if mj==1 then do Z=Z+4;end;do mj=0;end;else do En=(0X4D*En+ej)%dn;end;do mj=1;end;continue;end;else return Fj*16777216+pj*0X000010000+gj*0x00100+xj;end;end;end;end;end;en=3;else y=function()local Ed=V();if Ed>F then do return Ed-L;end;end;return Ed;end;en=1;end;else if Cn(0X001,en,0x0)then ln={};do en=0X04;end;continue;else Qn=function(...)return x('#',...),{...};end;en=0x0;end;end;until Cn(0X1,en,4);local kn=(Cn(0X00D,setmetatable({},{__mul=function(dW,oW)for yB=0,0x2 do do if not(yB<=0x000)then if yB==1 then In=In-0X0002cb;else return((oW-Jn)+In);end;else Jn=Jn+0X219;continue;end;end;end;end}),-0X4644ade4));local xn=(function(JB)local IB=(G());local EB=('');do for KW=1,IB,7997 do local CW,uW,RW,lW,IW,tW,WW,rW,eW=0X5,nil,nil,nil,nil,nil,nil,nil,(nil);while CW<0XB do if CW<=4 then if CW<=1 then if CW~=0X00 then for Ri=(setmetatable({},{__mod=function(z4,y4)lW=lW+440;return(y4-lW);end})%1194050312),#eW do local Vi=0X0001;do while(true)do do if Vi==0X0 then p=(JB*p+0X0c3)%0x100;break;else eW[Ri]=f(eW[Ri],p);do Vi=0;end;do continue;end;end;end;end;end;end;do CW=7;end;else lW=1194050028;CW=0X03;end;else if CW<=0X002 then RW=0x000017e69e1E;CW=0;else if CW==0X3 then do IW=0X000033bcC4f0;end;do CW=6;end;else do rW=KW+7997-0X1;end;CW=0x9;continue;end;end;end;else if CW<=0X7 then do if not(CW<=0X5)then if CW==0X6 then do tW=0X00047DbA402;end;do CW=8;end;do continue;end;else EB=EB..R(U(eW));CW=0X0B;do continue;end;end;else uW=0X24b8d2b4;CW=0X2;continue;end;end;else do if not(CW<=8)then if CW~=0X9 then eW={t(P,Z+KW-(setmetatable({},{__sub=function(yn,Vn)local Sn=(1);repeat if not(Sn<=0X1)then if Sn==2 then tW=tW-453;Sn=0X00;else return(((Vn+WW)+tW)-IW);end;else do if Sn~=0 then do WW=WW-516;end;Sn=0x2;continue;else IW=IW+0X01f4;Sn=0x3;continue;end;end;end;until(false);end})- -1862602151),Z+rW-(setmetatable({},{__add=function(jf,mf)lW=lW-0X9d;do RW=RW-713;end;local Lf=0X00000;do while(true)do if Lf~=0X00 then do return(((mf+lW)+RW)+uW);end;else uW=uW-33;Lf=0x01;end;end;end;end})+-0X83CB2F36))};CW=0X1;continue;else if not(rW>IB)then else rW=IB;end;do CW=0X00A;end;continue;end;else WW=1525036115;CW=0X00004;end;end;end;end;end;end;end;for aT=0,0X1 do if aT~=0X000 then return EB;else Z=Z+IB;continue;end;end;end);local gn=(nil);for jb=0x0,0X01 do do if Cn(7,nil,nil,214.02635147353521,{},en,tn,jb,0x2B,888.2686095812297,a,jb,SW)~=0 then continue;else gn={};continue;end;end;end;local function vn(I7,Z7,h7)local E7=h7[0X7];local X7=(h7[3]);local k7,p7=h7[5],(h7[4]);local i7,O7=h7[8],h7[0x2];local u7=(h7[6]);local v7=(b({},{__mode="\118"}));local s7=h7[9];local U7=(nil);do U7=function(...)local Iy=1;local Py=({});local ty=(H());local By,hy=0X0,{[0X2]=Py,[1]=h7};local zy,dy=Qn(...);do zy=zy-0X1;end;for i5=0X0,zy do if not(X7>i5)then break;else(Py)[i5]=dy[i5+0X1];end;end;local Jy=(ty==q and I7 or ty);if not k7 then do dy=nil;end;else if not(p7)then else do Py[X7]={n=zy>=X7 and zy-X7+0X1 or 0,U(dy,X7+1,zy+0x0001)};end;end;end;do if Jy==ty then else(X)(U7,Jy);end;end;local sy,qy,Cy,ly=l(function()repeat local pn=(i7[Iy]);local Vn=(pn[0X7]);Iy=Iy+0X1;if Vn>=0X000033 then if Vn<77 then if Vn<0x040 then if Vn<0X39 then if not(Vn<54)then do if Vn<0X37 then do(Py[pn[6]])[Py[pn[1]]]=Py[pn[3]];end;else do if Vn~=0X000038 then do repeat local Sx,Lx=v7,Py;if not(#Sx>0)then else local Is={};do for bI,RI in W,Sx do for SW,rW in W,RI do do if rW[0x1]==Lx and rW[2]>=0 then local hP=rW[0x2];if not(not Is[hP])then else Is[hP]={Lx[hP]};end;do rW[0X1]=Is[hP];end;rW[2]=0x1;end;end;end;end;end;end;until true;end;local k3=pn[6];return false,k3,k3;else do(Py)[pn[6]]={U({},1,pn[1])};end;end;end;end;end;else if Vn<0X34 then if Py[pn[1]]==Py[pn[3]]then else Iy=pn[6];end;else if Vn~=53 then Py[pn[6]]=hy[pn[1]];else repeat local NS,gS=v7,Py;if not(#NS>0)then else local BS={};for YB,LB in W,NS do for Af,Tf in W,LB do if not(Tf[1]==gS and Tf[2]>=0)then else local by=(Tf[0X00002]);if not BS[by]then(BS)[by]={gS[by]};end;Tf[1]=BS[by];Tf[0x2]=1;end;end;end;end;until true;return true,pn[0X6],0X00;end;end;end;else if not(Vn<60)then if Vn<62 then if Vn==61 then if pn[3]~=0Xb3 then do repeat local g3,P3=v7,(Py);if#g3>0X0 then local Jq=({});for Dj,yj in W,g3 do for RM,ZM in W,yj do if not(ZM[0X01]==P3 and ZM[2]>=0)then else local gR=(ZM[2]);if not(not Jq[gR])then else Jq[gR]={P3[gR]};end;ZM[1]=Jq[gR];(ZM)[2]=0X001;end;end;end;end;until true;end;local di=pn[6];return false,di,di+pn[1]-2;else Iy=Iy-1;i7[Iy]={[6]=(pn[0X0006]-243),[1]=(pn[0X1]-0xF3),[7]=0x053};end;else do Py[pn[6]][Py[pn[1]]]=pn[4];end;end;else if Vn~=0X3f then(Py)[pn[6]]=Py[pn[1]][Py[pn[3]]];else local by=pn[6];Py[by]=Py[by](Py[by+1]);By=by;end;end;else do if not(Vn<0x3A)then do if Vn~=59 then(Py)[pn[6]]=Py[pn[0x1]]<=Py[pn[3]];else(Py)[pn[0x6]]=Py[pn[1]]%pn[4];end;end;else local xP=pn[6];By=xP+pn[0x1]-1;do Py[xP]=Py[xP](U(Py,xP+1,By));end;By=xP;end;end;end;end;elseif Vn>=0X46 then if Vn<73 then if Vn<71 then(Py)[pn[0X6]]={};else do if Vn~=0X48 then Py[pn[6]]=pn[0x5]-Py[pn[0X3]];else if pn[0x00003]==106 then Iy=Iy-0x1;i7[Iy]={[0X7]=83,[6]=(pn[6]-188),[0x001]=(pn[0x1]-0XBc)};elseif pn[3]==0X0Fa then do Iy-=1;end;i7[Iy]={[6]=(pn[6]-84),[0X0007]=9,[1]=(pn[0X1]-84)};else do(Py)[pn[0X06]]=Py[pn[1]];end;end;end;end;end;else if Vn>=75 then if Vn~=76 then local NM=Z7[pn[0X1]];(Py)[pn[6]]=NM[1][NM[0x2]];else(Py)[pn[6]]=Py[pn[0X00001]]<Py[pn[0X3]];end;else if Vn==0X4A then local qN=pn[1];local xN=Py[qN];do for ZT=qN+0X1,pn[0X0003]do do xN=xN..Py[ZT];end;end;end;do(Py)[pn[0X0006]]=xN;end;else local ZB=pn[0X06];local KB,BB=Py[ZB]();if KB then do Iy=pn[0X00001];end;(Py)[ZB+3]=BB;end;end;end;end;else do if not(Vn>=67)then if Vn<0X41 then local u2=(pn[6]);local P2=(a(function(...)j();for YJ,CJ,wJ,SJ,dJ,RJ,HJ,QJ,PJ,eJ in...do(j)(true,{YJ,CJ,wJ,SJ,dJ,RJ,HJ,QJ,PJ,eJ});end;end));(P2)(Py[u2],Py[u2+0X01],Py[u2+2]);By=u2;do(Py)[u2]=P2;end;Iy=pn[0X1];else if Vn==0x42 then(Py)[pn[0x6]]=Py[pn[1]]>=Py[pn[3]];else Py[pn[6]]=pn[5]^Py[pn[3]];end;end;else if not(Vn>=68)then if pn[3]==0X000066 then Iy=Iy-1;do i7[Iy]={[0X001]=(pn[0X01]-7),[0x00007]=0x1,[6]=(pn[0x0006]-7)};end;else(Py)[pn[6]]=not Py[pn[1]];end;else if Vn~=69 then local rV=(pn[6]);local iV,aV,NV=Py[rV],Py[rV+0x1],Py[rV+2];Py[rV]=a(function()for iI=iV,aV,NV do(j)(true,iI);end;end);Iy=pn[0x1];else if pn[3]~=131 then if Py[pn[0X0006]]then do Iy=pn[1];end;end;else Iy=Iy-0X00001;i7[Iy]={[7]=0X00030,[1]=(pn[0x1]-0X000049),[6]=(pn[0X6]-0X000049)};end;end;end;end;end;end;else if not(Vn>=90)then if not(Vn<83)then if not(Vn>=0X00056)then if not(Vn<84)then do if Vn~=0X55 then(hy)[pn[0x00001]]=Py[pn[6]];else local KY=(pn[6]);Py[KY]=Py[KY](U(Py,KY+1,By));By=KY;end;end;else if pn[3]~=5 then Py[pn[0x6]]=nil;else Iy=Iy-1;i7[Iy]={[1]=(pn[1]-0X00007f),[6]=(pn[0X6]-127),[7]=9};end;end;else if Vn<0X58 then if Vn==87 then local sh=(pn[0X6]);local ph,th=Py[sh]();if ph then(Py)[sh+1]=th;Iy=pn[1];end;else(Py)[pn[6]]=Py[pn[1]]==Py[pn[3]];end;else if Vn~=0X00059 then Py[pn[0X6]]=Py[pn[0X1]]~=pn[4];else do(Py)[pn[6]]=false;end;end;end;end;else if Vn<0x50 then if Vn<78 then local ec=(pn[6]);(Py[ec])(Py[ec+1],Py[ec+0X0002]);By=ec-0x00001;else if Vn~=0X4F then local OM=(pn[0X6]);local SM=(pn[3]-1)*50;local mM=Py[OM];for q_=0X1,By-OM do(mM)[SM+q_]=Py[OM+q_];end;else local Vd=pn[1];(Py)[pn[6]]=Py[Vd]..Py[Vd+1];end;end;else if not(Vn<81)then do if Vn==0X00052 then Py[pn[6]]=Jy[pn[5]];else if not(not(Py[pn[1]]<Py[pn[0x3]]))then else Iy=pn[0x6];end;end;end;else local mQ=(pn[6]);(Py)[mQ]=Py[mQ](Py[mQ+0X01],Py[mQ+0x2]);By=mQ;end;end;end;else do if not(Vn>=96)then if Vn<0X00005D then if not(Vn<91)then do if Vn==0X005C then By=pn[6];(Py[By])();By=By-1;else(gn)[pn[1]]=Py[pn[0x00006]];end;end;else local TV=pn[0X6];local GV,xV=Py[TV]();do if GV then for kT=1,pn[3]do do(Py)[TV+kT]=xV[kT];end;end;Iy=pn[1];end;end;end;elseif Vn>=0x05e then if Vn~=95 then if not(Py[pn[1]]<pn[4])then Iy=pn[6];end;else local NX=(pn[0X6]);local LX=a(function(...)(j)();for a7 in...do j(true,a7);end;end);(LX)(Py[NX],Py[NX+1],Py[NX+2]);do By=NX;end;do(Py)[NX]=LX;end;Iy=pn[1];end;else local UW=pn[6];By=UW+pn[1]-1;(Py[UW])(U(Py,UW+0X0001,By));do By=UW-1;end;end;else if Vn<99 then if Vn>=0X61 then if Vn==98 then do if pn[3]==132 then do Iy=Iy-1;end;(i7)[Iy]={[0X0007]=0X00048,[0X6]=(pn[6]-0Xe7),[1]=(pn[0X00001]-231)};else if pn[0x3]==155 then Iy=Iy-1;(i7)[Iy]={[0x7]=0X000037,[0X06]=(pn[0X6]-0X000B2),[0x1]=(pn[1]-178)};else if pn[3]==224 then Iy=Iy-1;i7[Iy]={[0x7]=0X000053,[1]=(pn[1]-135),[0X06]=(pn[6]-135)};else repeat local da,za=v7,(Py);if not(#da>0)then else local Lb={};for aj,Ej in W,da do for i5,x5 in W,Ej do do if not(x5[0X1]==za and x5[2]>=0X0)then else local wv=(x5[2]);if not Lb[wv]then Lb[wv]={za[wv]};end;do x5[0X0001]=Lb[wv];end;x5[2]=0X1;end;end;end;end;end;until 0.22811797085822416;return;end;end;end;end;else Iy=pn[0X001];end;else local xQ=(pn[6]);local eQ,JQ,oQ=Py[xQ]();if not(eQ)then else Py[xQ+1]=JQ;Py[xQ+0x2]=oQ;Iy=pn[1];end;end;else do if not(Vn<0x00065)then if Vn==102 then if not(Py[pn[1]]<=pn[0X04])then Iy=pn[0X006];end;else(Py)[pn[6]]=Py[pn[1]]>Py[pn[0X3]];end;else if Vn~=0X64 then local aU=pn[0X6];for ea=aU,aU+(pn[0X01]-0x1)do do(Py)[ea]=dy[X7+(ea-aU)+1];end;end;else(Py)[pn[0x6]]=I(Py[pn[0X1]],Py[pn[3]]);end;end;end;end;end;end;end;end;else if not(Vn<25)then if not(Vn<38)then if Vn>=0X2c then if not(Vn<0X2F)then if not(Vn>=49)then do if Vn~=48 then do if not(not(Py[pn[1]]<=Py[pn[0X3]]))then else do Iy=pn[0X6];end;end;end;else if pn[0X3]~=124 then do Py[pn[6]]=-Py[pn[0X1]];end;else Iy=Iy-0X1;(i7)[Iy]={[0X6]=(pn[0X0006]-0Xde),[0x7]=0X000029,[1]=(pn[1]-222)};end;end;end;else do if Vn==50 then Py[pn[6]]=J(Py[pn[0X1]]);else repeat local D1,q1=v7,Py;if not(#D1>0)then else local f1={};for gf,Mf in W,D1 do for oZ,VZ in W,Mf do if not(VZ[0X1]==q1 and VZ[0x0002]>=0x0)then else local Jm=(VZ[0x0002]);if not(not f1[Jm])then else do(f1)[Jm]={q1[Jm]};end;end;VZ[0X00001]=f1[Jm];(VZ)[2]=1;end;end;end;end;until true;do return true,pn[0X06],0X1;end;end;end;end;else if Vn>=45 then if Vn~=46 then do Py[pn[0X0006]]=Py[pn[0x1]]-Py[pn[0x0003]];end;else local RV=(O7[pn[0X1]]);local yV=(RV[1]);local BV,SV=#yV,nil;do if not(BV>0X000)then else SV={};for DH=0x1,BV do local MH=yV[DH];do if MH[0X001]==0X000 then do SV[DH-0X001]={Py,MH[2]};end;else(SV)[DH-0X1]=Z7[MH[2]];end;end;end;c(v7,SV);end;end;(Py)[pn[6]]=vn(Jy,SV,RV);end;else Py[pn[0X6]]=Py[pn[0X01]][pn[4]];end;end;else do if Vn<41 then do if not(Vn<0X27)then if Vn~=40 then do if pn[3]==0X0007 then Iy=Iy-1;i7[Iy]={[1]=(pn[0x001]-149),[0X6]=(pn[6]-0X95),[7]=72};else if pn[3]==104 then Iy=Iy-0X1;do i7[Iy]={[0X7]=0X06,[0x6]=(pn[6]-0X000Aa),[1]=(pn[0X1]-170)};end;else(Py)[pn[6]]=dy[X7+1];end;end;end;else Py[pn[6]]=pn[5]/pn[0X0004];end;else Py[pn[0X6]]=Py[pn[0X1]]%Py[pn[3]];end;end;else if Vn<42 then repeat local uy,wy,Ly=v7,Py,(pn[0x6]);if#uy>0X00 then local Ca={};for bB,AB in W,uy do do for A7,q7 in W,AB do if not(q7[1]==wy and q7[2]>=Ly)then else local GK=q7[0X2];if not(not Ca[GK])then else do(Ca)[GK]={wy[GK]};end;end;(q7)[0X1]=Ca[GK];(q7)[0X00002]=1;end;end;end;end;end;until 0.7530278890913443;else do if Vn~=0X2b then(Py)[pn[6]]=C(Py[pn[0X00001]],Py[pn[0x03]]);else local Uv=(Z7[pn[0X1]]);(Uv[0x1])[Uv[2]]=Py[pn[6]];end;end;end;end;end;end;else do if Vn>=0X1F then do if Vn<34 then if Vn>=32 then if Vn==0X21 then(Py)[pn[0X6]]=Py[pn[1]]==pn[0X004];else Py[pn[6]]=Py[pn[0X1]]~=Py[pn[3]];end;else local fL,OL=pn[0x0006],pn[0X1];if OL==0 then else do By=fL+OL-0X1;end;end;local mL=(pn[3]);local UL,sL=nil,nil;if OL==0x00001 then UL,sL=Qn(Py[fL]());else UL,sL=Qn(Py[fL](U(Py,fL+1,By)));end;do if mL~=0X1 then if mL==0X0 then UL=UL+fL-1;do By=UL;end;else UL=fL+mL-2;do By=UL+1;end;end;local Iu=0X0;do for rU=fL,UL do Iu=Iu+1;do Py[rU]=sL[Iu];end;end;end;else do By=fL-1;end;end;end;end;else do if not(Vn<0X024)then if Vn~=37 then if Py[pn[0X1]]==Py[pn[3]]then Iy=pn[0X6];end;else Jy[pn[5]]=Py[pn[0X6]];end;else if Vn~=35 then local vO=(pn[6]);local NO,dO=Py[vO],(pn[0X3]-1)*50;for TV=1,pn[0X1]do do(NO)[dO+TV]=Py[vO+TV];end;end;else(Py)[pn[6]]=pn[5];end;end;end;end;end;else do if not(Vn>=0X1c)then if Vn>=26 then if Vn~=27 then Py[pn[6]][pn[0X5]]=pn[0X004];else local EA=pn[6];Py[EA](U(Py,EA+1,By));By=EA-0X1;end;else Py[pn[0x00006]]=Py[pn[0X00001]]*Py[pn[0X003]];end;else do if not(Vn>=0X1d)then local vF=(pn[0X00006]);local CF=a(function(...)(j)();for xr,gr in...do(j)(true,xr,gr);end;end);(CF)(Py[vF],Py[vF+0X00001],Py[vF+2]);By=vF;do(Py)[vF]=CF;end;Iy=pn[0X001];else do if Vn~=0X1e then(Py)[pn[0x06]]=f(Py[pn[1]],Py[pn[0x00003]]);else local tQ=(pn[6]);Py[tQ](Py[tQ+0X1]);By=tQ-0X1;end;end;end;end;end;end;end;end;end;else if Vn<12 then if not(Vn>=0x6)then if not(Vn<3)then do if Vn<0X4 then local y6=(pn[0X01]);local o6=(pn[6]);By=o6+y6-0X1;do repeat local lj,Dj=v7,Py;if#lj>0 then local RA={};for FB,tB in W,lj do for gW,JW in W,tB do do if not(JW[1]==Dj and JW[2]>=0x000)then else local zp=JW[0X00002];if not RA[zp]then(RA)[zp]={Dj[zp]};end;do JW[1]=RA[zp];end;(JW)[2]=0X1;end;end;end;end;end;until true;end;do return true,o6,y6;end;else if Vn==0x00005 then if Py[pn[0X1]]==pn[0x4]then else do Iy=pn[0X6];end;end;else if Py[pn[0x1]]==pn[4]then do Iy=pn[0X00006];end;end;end;end;end;else if not(Vn>=0X0001)then do(Py)[pn[0X6]]=Py[pn[1]]^Py[pn[0X0003]];end;else if Vn==2 then local jy=Py[pn[0x0001]]/Py[pn[0X3]];Py[pn[6]]=jy-jy%1;else do(Py)[pn[6]]=#Py[pn[1]];end;end;end;end;else if Vn<0x9 then if Vn>=7 then if Vn~=8 then Py[pn[0X6]]=Py[pn[0X1]]>pn[0x4];else local Iq=pn[0X6];local Eq=Py[pn[1]];do Py[Iq+1]=Eq;end;Py[Iq]=Eq[pn[0X4]];end;else repeat local j6,S6=v7,(Py);if#j6>0 then local nk={};for sP,qP in W,j6 do do for ax,gx in W,qP do do if not(gx[0X001]==S6 and gx[0X2]>=0X0)then else local QX=gx[2];do if not nk[QX]then(nk)[QX]={S6[QX]};end;end;do gx[0x001]=nk[QX];end;gx[2]=1;end;end;end;end;end;end;until true;return false,pn[6],By;end;else if not(Vn>=10)then if pn[0X0003]~=0X81 then local rb=zy-X7;local Pb=(pn[6]);if rb<0X0 then rb=-1;end;for Pj=Pb,Pb+rb do Py[Pj]=dy[X7+(Pj-Pb)+0X001];end;do By=Pb+rb;end;else Iy=Iy-0X001;i7[Iy]={[1]=(pn[1]-0X97),[6]=(pn[6]-151),[0X7]=0x1};end;else do if Vn==11 then do if Py[pn[1]]<Py[pn[0X3]]then Iy=pn[0X6];end;end;else do Py[pn[6]]=Py[pn[0X1]]+Py[pn[3]];end;end;end;end;end;end;else if Vn<18 then do if not(Vn<0xf)then if not(Vn>=0X10)then if Py[pn[1]]<=Py[pn[0X003]]then Iy=pn[0X6];end;else if Vn==0X11 then if pn[3]~=41 then for Cv=pn[0X0006],pn[0x1]do(Py)[Cv]=nil;end;else Iy=Iy-0x1;do(i7)[Iy]={[6]=(pn[6]-174),[7]=6,[0X1]=(pn[1]-0X000Ae)};end;end;else if pn[0X003]~=0Xb5 then do if not Py[pn[0x6]]then Iy=pn[0X1];end;end;else Iy=Iy-0x00001;(i7)[Iy]={[0X6]=(pn[0X6]-0X62),[1]=(pn[1]-0X62),[0X7]=0X00011};end;end;end;else if not(Vn<0XD)then do if Vn~=14 then Py[pn[0X6]]=true;else(Py)[pn[0X006]]=e(Py[pn[0X1]],Py[pn[3]]);end;end;else do(Py)[pn[0X6]]=gn[pn[1]];end;end;end;end;else if Vn<0x0015 then if Vn>=0X13 then if Vn~=0x14 then Py[pn[6]]=pn[0X5];else Py[pn[6]]=Py[pn[0X1]]+pn[4];end;else By=pn[6];Py[By]=Py[By]();end;else do if not(Vn<23)then if Vn~=24 then Py[pn[6]]=r(Py[pn[1]],Py[pn[3]]);else do Py[pn[6]]=Py[pn[1]]/Py[pn[0X3]];end;end;else if Vn~=22 then(Py)[pn[6]]=Py[pn[1]]-pn[0X04];else Py[pn[0X6]][pn[0X5]]=Py[pn[3]];end;end;end;end;end;end;end;end;until false;end);if not(sy)then if k(qy)=='\s\116\114in\g'then if not(T(qy,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(T(qy,"^.-:%d+: "))then(v)(qy,0X00);else v('\Lu\114a\112\h\ \083\099r\i\pt\:'..(u7[Iy-0X1]or"(internal)")..": "..g(qy),0);end;end;else v(qy,0);end;else do if qy then if ly==1 then return Py[Cy]();else return Py[Cy](U(Py,Cy+0X0001,By));end;else if Cy then return U(Py,Cy,ly);end;end;end;end;end;end;X(U7,I7);do return U7;end;end;local function nn()local Uu=13;local Su,bu,Cu,Zu,qu,Ou,Xu,Vu,ru,tu,Pu,iu,ou,hu,vu,Iu=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;while Uu~=0x00010 do do if not(Uu<=7)then if not(Uu<=11)then if not(Uu<=13)then if Uu~=14 then Xu=0X01E2aE947;do Uu=0X1;end;do continue;end;else do iu=833051685;end;Uu=7;continue;end;else if Uu~=0Xc then Su=1938379862;Uu=5;else qu=0X00061D9cCA4;Uu=0X000A;continue;end;end;else do if Uu<=9 then if Uu==8 then hu=106945325;Uu=0X6;continue;else do tu=737458239;end;Uu=0X0;continue;end;else if Uu==10 then do Ou=924326243;end;Uu=0Xf;else Iu=0X69752f71;do Uu=16;end;end;end;end;end;else if Uu<=0X3 then if Uu<=0X001 then if Uu==0X0000 then Pu=1145802436;do Uu=14;end;continue;else Vu=0X2Fa8E161;Uu=2;continue;end;else if Uu==0x002 then do ru=0x000026e7911;end;do Uu=9;end;do continue;end;else Cu=671264898;Uu=4;end;end;else if Uu<=5 then if Uu~=4 then bu=236493515;Uu=3;else Zu=1238064521;Uu=12;do continue;end;end;else if Uu~=6 then ou=1672660609;Uu=8;else do vu=1801611285;end;Uu=0Xb;continue;end;end;end;end;end;end;local yu=(0X5F5ffD2E);local fu=({});Uu=1;local Ru,Yu,Ju=nil,nil,nil;repeat if not(Uu<=0)then if Uu==1 then Ru={};Uu=0X2;else Yu={Xn,{},nil,Xn,Xn,{},nil,{},nil};Uu=0;end;else Ju=on;Uu=0X3;end;until Uu==3;local su,goto=(nil),(nil);for b0=0X0,4 do if b0<=1 then if b0==0 then do Yu[0X010]=G();end;continue;else(Yu)[12]=G();continue;end;else if not(b0<=2)then do if b0~=0x0003 then for cW=0X1,V()do fu[cW]={Y(),V()};end;continue;else do su={};end;end;end;else(Yu)[(setmetatable({},{__mul=function(Ih,hh)do yu=yu+107;end;do return(hh-yu);end;end})*1600126362)]=fu;end;end;end;Uu=0;do repeat if Uu~=0X00 then(Yu)[11]=Y();Uu=0X0002;continue;else do(Yu)[13]=G();end;do Uu=0X01;end;end;until Uu==2;end;local eu=(Yu[0x2]);local lu=G()-0X0028c4;Uu=0x1;local ju=nil;while Uu<7 do if Uu<=2 then do if not(Uu<=0X0)then if Uu==1 then for Oh=(setmetatable({},{__sub=function(mo,To)yu=yu+278;local Uo=(0X0);do while 0.546638621397193 do if Uo<=0 then Iu=Iu-541;Uo=0X02;continue;else if Uo~=1 then vu=vu-795;Uo=0X00001;do continue;end;else return(((To-yu)+Iu)+vu);end;end;end;end;end})- -1970770847),lu-(setmetatable({},{__sub=function(Jh,Gh)local ph=(1);while ph~=2 do if ph~=0X0 then do hu=hu+0x3D6;end;ph=0;continue;else do Iu=Iu-0X00289;end;ph=0x2;end;end;ph=0X0;repeat if not(ph<=0X0)then if ph==1 then return((((Gh-hu)+Iu)-yu)+vu);else do vu=vu-0X104;end;ph=0X1;end;else yu=yu+0Xfa;ph=2;continue;end;until(false);end})- -0x06f17b014)do eu[Oh]=nn();end;Uu=3;do continue;end;else Yu[(setmetatable({},{__pow=function(Fe,ce)for KH=0X00000,0X00001 do do if KH~=0 then return(ce-Iu);else Iu=Iu+0X0D7;end;end;end;end})^0x069752baC)]=Y();Uu=0X4;end;else ju=Y();Uu=0x5;continue;end;end;else if not(Uu<=4)then if Uu~=0X5 then(Yu)[(setmetatable({},{__div=function(ho,zo)local so=(0);while 0X69D1AC2b do do if so<=0X0 then vu=vu+0x3e;so=0x1;else if so==0X00001 then ou=ou-17;do so=0x02;end;continue;else return((zo-vu)+ou);end;end;end;end;end})/128949707)]=V();Uu=0;else Yu[5]=m(ju,(setmetatable({},{__sub=function(g8,e8)for Pc=0,4 do do if Pc<=0X01 then do if Pc==0 then yu=yu-988;do continue;end;else iu=iu+0x1C;end;end;elseif Pc<=0x002 then do vu=vu-0X6f;end;do continue;end;else do if Pc~=0X3 then do return((((e8+yu)-iu)+vu)+Pu);end;else do Pu=Pu-41;end;continue;end;end;end;end;end;end})- -0XDD6691EB),0X1)~=0;do Uu=0X07;end;continue;end;else if Uu~=3 then Yu[0X00A]=G();Uu=6;else do Yu[13]=G();end;Uu=0X002;end;end;end;end;Uu=2;local Hu=nil;while Uu<3 do do if Uu<=0 then Hu=G();Uu=3;else if Uu==1 then(Yu)[3]=V();do Uu=0X0;end;else do Yu[(setmetatable({},{__sub=function(uA,RA)do return RA;end;end})-4)]=m(ju,(setmetatable({},{__sub=function(sO,uO)return uO;end})-2),0X1)~=(setmetatable({},{__div=function(WQ,TQ)local dQ=0X001;repeat if dQ<=0X0 then do tu=tu-316;end;dQ=0X0002;else do if dQ==1 then do yu=yu+0X0000389;end;dQ=0;else ru=ru+0X19A;break;end;end;end;until(false);return(((TQ-yu)+tu)-ru);end})/903463678);end;Uu=0X1;end;end;end;end;Uu=2;local Mu,mu=nil,(nil);while Uu~=0X4 do do if not(Uu<=1)then if Uu~=0X00002 then mu=Y();Uu=4;continue;else for WL=(setmetatable({},{__pow=function(D5,O5)for gM=0X000,0X004 do if not(gM<=1)then if not(gM<=2)then if gM~=0X03 then return((((O5-Vu)+Xu)+Ou)+qu);else do qu=qu-265;end;continue;end;else Ou=Ou-0x1Bc;continue;end;else do if gM==0X0 then Vu=Vu+589;else Xu=Xu-0x0002d;continue;end;end;end;end;end})^-2272520365),Hu do local ZL,mL,hL,QL=0x2,nil,nil,(nil);while ZL~=3 do if ZL<=0X0 then hL=G();ZL=1;else if ZL==0X1 then QL=G();do ZL=3;end;do continue;end;else mL=G();ZL=0;end;end;end;for RS=mL,hL do(Yu[6])[RS]=QL;end;end;do Uu=0X0000;end;end;else if Uu~=0X0 then do Mu=G()-0X011de4;end;Uu=3;continue;else(Yu)[0X00a]=Y();Uu=1;continue;end;end;end;end;local du=Y()~=(setmetatable({},{__mul=function(FD,PD)local BD=0X001;repeat do if not(BD<=1)then if BD<=0X002 then do Cu=Cu-0X009;end;do BD=0X3;end;continue;elseif BD==0X3 then do bu=bu+129;end;BD=0;else return((((PD+Zu)+Cu)-bu)-Pu);end;else if BD==0 then Pu=Pu+955;BD=4;continue;else do Zu=Zu-459;end;do BD=2;end;end;end;end;until(false);end})*-527031957);for YT=0x00,0X0001 do if YT~=0X0 then(Yu)[9]=V();continue;else for GN=(setmetatable({},{__concat=function(ax,Mx)Su=Su-708;local ux=(1);while 0.2992285301324371 do if ux~=0X0 then do iu=iu+696;end;do ux=0X0000;end;else do return((Mx+Su)-iu);end;end;end;end})..-1105326744),Mu do local nN,BN,XN=nil,nil,(nil);local KN=0X0002;repeat do if not(KN<=2)then if KN<=3 then do if BN==0xf3 then nN=A();elseif BN==Mn then nN=s(xn(mu),Y());elseif BN==Fn then do nN=s(xn(mu),0X2);end;elseif BN==98 then nN=hn;elseif BN==0X87 then nN=D();elseif BN==89 then do nN=D();end;elseif BN==0x04f then nN=true;elseif BN==0X21 then nN=s(xn(mu),Y());elseif BN==0XFe then do nN=s(xn(mu),19);end;end;end;KN=0X004;do continue;end;else if KN==0x4 then do XN={nN,{}};end;do KN=0X5;end;else(su)[Ju]=XN;break;end;end;else if KN<=0X00 then(Ru)[GN-0X00001]=Ju;do KN=3;end;continue;else if KN~=0X1 then nN=nil;do KN=1;end;continue;else do BN=Y();end;KN=0X0000;do continue;end;end;end;end;end;until false;Ju=Ju+(setmetatable({},{__sub=function(TU,HU)return HU;end})-1);if not(du)then else(ln)[kn]=XN;kn=kn+0X1;end;end;continue;end;end;local xu=Yu[8];do Uu=0x3;end;local Tu=nil;repeat if not(Uu<=0X1)then if Uu==2 then for zt=0x1,Tu do xu[zt]={[0x007]=hn,[0X5]=true,[0X2]=mn,[0x3]=y(),[0X4]=0.8231747332555337,[0X0001]="\R\F\+",[7]=V(),[4]=Y(),[0X6]=false,[0X5]=-0X0028D07c00,[0X01]=y(),[2]=Y(),[0X6]=y(),[0x005]=Y()};end;do Uu=0x0;end;else Tu=G()-91648;do Uu=2;end;end;else if Uu==0 then for De=1,Tu do local Xe=Yu[8][De];do for f_,B_ in An(u)do local I_=(nil);local Z_,r_=S[B_],(1);while r_<2 do if r_~=0X0000 then I_=Xe[Z_];r_=0x0;else if I_==Dn then local Mf,Yf,Cf=Ru[Xe[B_]],0,nil;while Yf~=0X2 do if Yf~=0 then do if Cf then Xe[Z_]=Cf[0X1];local n9=nil;for Sy=0,0X00001 do do if Sy==0 then n9=Cf[0x2];else do(n9)[#n9+0X1]={Xe,Z_};end;continue;end;end;end;end;end;Yf=0X02;continue;else Cf=su[Mf];Yf=0X1;end;end;else if I_==0X0A then Xe[B_]=De+Xe[B_]+0x0001;end;end;r_=2;end;end;end;end;end;Uu=1;do continue;end;else do return Yu;end;end;end;until false;end;local sn=(nn());do gn[(setmetatable({},{__pow=function(uz,Fz)do Jn=Jn-0x1Af;end;return(Fz+Jn);end})^-336248737)]=Cn(14,nil,nil,U,0X41,{},184.8172161669404,ln,{});end;ln=nil;return vn(q,Xn,Cn(14,nil,nil,0X00002C,{},x8,C,sn,945.2411446386651,en))(...);end)(table.insert,pcall,string.char,256,39,0x7,setfenv,bit32.band,function(W,w,h,...)do if not(W<=0X6)then if W<=0xa then do if W<=8 then if W~=0X7 then return w~=h;else return({...})[0X9];end;elseif W~=9 then return w>h;else return({...})[0X8];end;end;else if not(W<=0x0C)then if W==0Xd then return w*h;else return({...})[5];end;else if W==0XB then return({...})[1];else return({...})[2];end;end;end;else if not(W<=0X002)then if W<=0x4 then do if W~=0x3 then return w-h;else do return({...})[0x7];end;end;end;else if W==5 then return({...})[0X3];else return w%h;end;end;else do if not(W<=0)then if W~=0X0001 then do return w<h;end;else do return w==h;end;end;else return w<=h;end;end;end;end;end;end,string,0xe4,tostring,0x2,"\060\i8",bit32.rshift,nil,next,ipairs,bit32.lshift,false,setmetatable,rawset,1,tonumber,getfenv,bit32.bnot,coroutine,assert,unpack,bit32,0.675936959054471,{26509,0X000F19f172,3246450078,0X2ED5ef3A,63146763,0X25Fb9929,4276836217,0XE668e8Bd,2957213355},...);end;
